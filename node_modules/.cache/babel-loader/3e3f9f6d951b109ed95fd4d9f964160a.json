{"ast":null,"code":"var _jsxFileName = \"/Users/johnreiner/Development/personalProjects/tetris-in-react/src/App.js\";\nimport React, { useEffect, useState } from 'react'; // import {Button, Modal, Form} from 'react-bootstrap'\n\nimport './App.css'; // import Tetris from './components/Tetris';\n\nimport LogIn from './components/LogIn';\nimport SignUp from './components/SignUp'; // import NavBar from './components/NavBar';\n\nimport MainBody from './components/MainBody'; // import LeaderBoard from './components/LeaderBoard'\n\nconst App = () => {\n  // const [users, setUsers] = useState([])\n  const [userId, setUserId] = useState('1');\n  const [loginShow, setLoginShow] = useState(true);\n  const [signUpShow, setSignUpShow] = useState(false);\n  const [username, setUsername] = useState('guest');\n\n  const handleLoginShow = () => setLoginShow(true);\n\n  const handleLoginClose = () => setLoginShow(false);\n\n  const handleSignUpClose = () => setSignUpShow(false);\n\n  const handleLoginSubmit = () => {\n    const loginUser = () => {\n      fetch('https://react-tetris-backend.herokuapp.com/api/v1/users').then(response => response.json()).then(users => {\n        let user = users.find(user => user.username === username);\n\n        if (user && user.password === password) {\n          setUser(user);\n          props.handleLoginClose();\n        } else {\n          alert('Wrong Username or Password');\n        }\n      });\n    };\n  };\n\n  const logginUser = id => {\n    setUserId(id);\n  };\n\n  const handleCreateAccountClick = () => {\n    handleLoginClose();\n    setSignUpShow(true);\n  };\n\n  useEffect(() => {\n    if (users.length > 0) {\n      let user = users.find(user => user.id === userId);\n      let username = user.username;\n      setUsername(username);\n    }\n  }, [userId]); // useEffect(() => {\n  //   fetch('https://react-tetris-backend.herokuapp.com/api/v1/users')\n  //   .then(response => response.json())\n  //   .then(users => setUsers(users))\n  // }, [loginShow])\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LogIn, {\n    handleCreateAccountClick: handleCreateAccountClick,\n    logginUser: logginUser,\n    users: users,\n    handleLoginClose: handleLoginClose,\n    loginShow: loginShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SignUp, {\n    handleLoginShow: handleLoginShow,\n    signUpShow: signUpShow,\n    handleSignUpClose: handleSignUpClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MainBody, {\n    username: username,\n    userId: userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/johnreiner/Development/personalProjects/tetris-in-react/src/App.js"],"names":["React","useEffect","useState","LogIn","SignUp","MainBody","App","userId","setUserId","loginShow","setLoginShow","signUpShow","setSignUpShow","username","setUsername","handleLoginShow","handleLoginClose","handleSignUpClose","handleLoginSubmit","loginUser","fetch","then","response","json","users","user","find","password","setUser","props","alert","logginUser","id","handleCreateAccountClick","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n// import {Button, Modal, Form} from 'react-bootstrap'\n\nimport './App.css';\n// import Tetris from './components/Tetris';\nimport LogIn from './components/LogIn';\nimport SignUp from './components/SignUp';\n// import NavBar from './components/NavBar';\nimport MainBody from './components/MainBody';\n// import LeaderBoard from './components/LeaderBoard'\n\n\n\nconst App = () =>  {\n\n  // const [users, setUsers] = useState([])\n  const [userId, setUserId] = useState('1')\n  const [loginShow, setLoginShow] = useState(true);\n  const [signUpShow, setSignUpShow] = useState(false)\n  const [username, setUsername] = useState('guest')\n\n  const handleLoginShow = () => setLoginShow(true);\n  const handleLoginClose = () => setLoginShow(false);\n  const handleSignUpClose = () => setSignUpShow(false)\n\n  const handleLoginSubmit = () => {\n    const loginUser = () => {\n      fetch('https://react-tetris-backend.herokuapp.com/api/v1/users')\n      .then(response => response.json())\n      .then(users => {\n          let user = users.find(user => user.username === username)\n          if (user && user.password ===  password) {\n              setUser(user)\n              props.handleLoginClose()\n          } else {\n              alert('Wrong Username or Password')\n          }\n      })\n  }\n  }\n\n  const logginUser = id => {\n    setUserId(id)\n  }\n\n  const handleCreateAccountClick = () => {\n    handleLoginClose()\n    setSignUpShow(true)\n  }\n\n  useEffect(() => {\n    if (users.length > 0) {\n      let user = users.find(user => user.id === userId)\n      let username = user.username\n      setUsername(username)      \n    }\n  }, [userId])\n\n  // useEffect(() => {\n  //   fetch('https://react-tetris-backend.herokuapp.com/api/v1/users')\n  //   .then(response => response.json())\n  //   .then(users => setUsers(users))\n  // }, [loginShow])\n\n  return (\n    <div className=\"App\">\n      \n      <LogIn handleCreateAccountClick={handleCreateAccountClick} logginUser={logginUser} users={users} handleLoginClose={handleLoginClose} loginShow={loginShow}/>\n      <SignUp handleLoginShow={handleLoginShow} signUpShow={signUpShow} handleSignUpClose={handleSignUpClose} />\n      <MainBody username={username} userId={userId}/>\n      {/* <Tetris userId={userId} /> */}\n      {/* <LeaderBoard scores={scores}/> */}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}