{"ast":null,"code":"var _jsxFileName = \"/Users/johnreiner/Development/personalProjects/tetris-in-react/src/components/Tetris.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStage, checkCollision } from '../gameHelpers'; // Styled Components\n\nimport { StyledTetrisWrapper, StyledTetris } from './Styles/StyledTetris'; // Custom Hooks\n\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus'; // Components\n\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport NavBar from './NavBar'; // import LogIn from './LogIn'\n\nimport LeaderBoard from './LeaderBoard';\nimport SignUp from './SignUp';\n\nconst Tetris = props => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [scores, setScores] = useState([]);\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n  useEffect(() => {\n    fetch('https://react-tetris-backend.herokuapp.com/api/v1/users').then(response => response.json()).then(user => setScores(scores));\n  }, [gameOver]);\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, {\n      x: dir,\n      y: 0\n    })) {\n      updatePlayerPos({\n        x: dir,\n        y: 0\n      });\n    }\n  };\n\n  const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  };\n\n  const drop = () => {\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, {\n      x: 0,\n      y: 1\n    })) {\n      updatePlayerPos({\n        x: 0,\n        y: 1,\n        collided: false\n      });\n    } else {\n      // Game Over\n      if (player.pos.y < 1) {\n        setGameOver(true);\n        setDropTime(null); // fetchLevel(level)\n\n        fetchScore(score);\n      }\n\n      updatePlayerPos({\n        x: 0,\n        y: 0,\n        collided: true\n      });\n    }\n  };\n\n  const keyUp = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  };\n\n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  };\n\n  const move = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  const fetchScore = () => {\n    fetch(\"https://react-tetris-backend.herokuapp.com/api/v1/scores\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: props.loggedinUser.id,\n        points: score,\n        rows: rows,\n        level: level\n      })\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    onKeyUp: keyUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    loggedinUser: props.loggedinUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/leaderBoard\",\n    render: () => /*#__PURE__*/React.createElement(LeaderBoard, {\n      scores: scores,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 56\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/sign-up\",\n    render: () => /*#__PURE__*/React.createElement(SignUp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 46\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/deploy_react_tetris/\",\n    render: () => /*#__PURE__*/React.createElement(StyledTetris, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Stage, {\n      stage: stage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"aside\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, gameOver ? /*#__PURE__*/React.createElement(Display, {\n      gameOver: gameOver,\n      text: \"Game Over\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Display, {\n      text: `Score: ${score}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Display, {\n      text: `Rows: ${rows}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Display, {\n      text: `Level: ${level}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(StartButton, {\n      callback: startGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Tetris;","map":{"version":3,"sources":["/Users/johnreiner/Development/personalProjects/tetris-in-react/src/components/Tetris.js"],"names":["React","useState","useEffect","Route","createStage","checkCollision","StyledTetrisWrapper","StyledTetris","useInterval","usePlayer","useStage","useGameStatus","Stage","Display","StartButton","NavBar","LeaderBoard","SignUp","Tetris","props","dropTime","setDropTime","gameOver","setGameOver","scores","setScores","player","updatePlayerPos","resetPlayer","playerRotate","stage","setStage","rowsCleared","score","setScore","rows","setRows","level","setLevel","fetch","then","response","json","user","movePlayer","dir","x","y","startGame","drop","prev","collided","pos","fetchScore","keyUp","keyCode","dropPlayer","move","method","headers","body","JSON","stringify","user_id","loggedinUser","id","points","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom'\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './Styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval'\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport NavBar from './NavBar'\n// import LogIn from './LogIn'\nimport LeaderBoard from './LeaderBoard'\nimport SignUp from './SignUp'\n\nconst Tetris = (props) => {\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n    const [scores, setScores] = useState([])\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n        rowsCleared\n    );\n\n    useEffect(() => {\n        fetch('https://react-tetris-backend.herokuapp.com/api/v1/users')\n        .then(response => response.json())\n        .then(user => setScores(scores))\n    }, [gameOver])\n\n    const movePlayer = dir => {\n        if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n            updatePlayerPos({ x: dir, y: 0 });\n        }\n    }\n\n    const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0)\n    setLevel(0)\n    }\n\n    const drop = () => {\n\n        if (rows > (level + 1) * 10) {\n            setLevel(prev => prev + 1);\n            setDropTime(1000 / (level + 1) + 200)\n        }\n        if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n            updatePlayerPos({ x: 0, y: 1, collided: false })\n        } else {\n        // Game Over\n            if (player.pos.y < 1) {\n            setGameOver(true);\n            setDropTime(null);\n            // fetchLevel(level)\n            fetchScore(score)\n            }\n            updatePlayerPos({ x: 0, y: 0, collided: true });\n        }\n    }\n\n    const keyUp = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 40) {\n                setDropTime(1000 / (level + 1) + 200);\n            }\n        }\n    }\n\n    const dropPlayer = () => {\n    setDropTime(null)\n    drop();\n    }\n\n    const move = ({ keyCode }) => {\n    if (!gameOver) {\n        if (keyCode === 37) {\n            movePlayer(-1);\n        } else if (keyCode === 39) {\n            movePlayer(1);\n        } else if (keyCode === 40) {\n            dropPlayer();\n        } else if (keyCode === 38) {\n            playerRotate(stage, 1);\n        }\n    }\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime)\n\n    const fetchScore = () => {\n        fetch(\"https://react-tetris-backend.herokuapp.com/api/v1/scores\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user_id: props.loggedinUser.id,\n                points: score,\n                rows: rows,\n                level: level\n            })\n        })\n    }\n\n    return (\n        \n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp}>\n        <NavBar loggedinUser={props.loggedinUser}/>\n        <Route exact path=\"/leaderBoard\" render={() => <LeaderBoard scores={scores}/>}/>\n        <Route path=\"/sign-up\" render={() => <SignUp/ >} />\n        <Route exact path=\"/deploy_react_tetris/\" render={() => \n            <StyledTetris>\n            <Stage stage={stage} />\n            <aside>\n                {gameOver ? (\n                <Display gameOver={gameOver} text=\"Game Over\" />\n                ) : (\n                <div>\n                    <Display text={`Score: ${score}`} />\n                    <Display text={`Rows: ${rows}`} />\n                    <Display text={`Level: ${level}`} />\n                </div>\n                )}\n                <StartButton callback={startGame} />\n            </aside>\n            </StyledTetris>\n        }/>\n    </StyledTetrisWrapper>\n    );\n};\n\nexport default Tetris;\n"]},"metadata":{},"sourceType":"module"}