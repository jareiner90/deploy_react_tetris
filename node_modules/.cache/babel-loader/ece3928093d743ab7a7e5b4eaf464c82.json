{"ast":null,"code":"import _slicedToArray from\"/Users/johnreiner/Development/personalProjects/tetris-in-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect,useCallback}from'react';export var useGameStatus=function useGameStatus(rowsCleared){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),score=_useState2[0],setScore=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),rows=_useState4[0],setRows=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),level=_useState6[0],setLevel=_useState6[1];var linePoints=[40,100,300,1200];var calcScore=useCallback(function(){if(rowsCleared>0){// this is how original Tetris score is calculated\nconsole.log('row cleared');setScore(function(prev){return prev+linePoints[rowsCleared-1]*(level+1);});setRows(function(prev){return prev+rowsCleared;});}},[level,linePoints,rowsCleared]);useEffect(function(){calcScore();},[calcScore,rowsCleared,score]);return[score,setScore,rows,setRows,level,setLevel];};","map":{"version":3,"sources":["/Users/johnreiner/Development/personalProjects/tetris-in-react/src/hooks/useGameStatus.js"],"names":["useState","useEffect","useCallback","useGameStatus","rowsCleared","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","console","log","prev"],"mappings":"qLAAA,OAASA,QAAT,CAAmBC,SAAnB,CAA8BC,WAA9B,KAAiD,OAAjD,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,WAAW,CAAI,eACdJ,QAAQ,CAAC,CAAD,CADM,wCACjCK,KADiC,eAC1BC,QAD0B,8BAEhBN,QAAQ,CAAC,CAAD,CAFQ,yCAEjCO,IAFiC,eAE3BC,OAF2B,8BAGdR,QAAQ,CAAC,CAAD,CAHM,yCAGjCS,KAHiC,eAG1BC,QAH0B,eAKxC,GAAMC,CAAAA,UAAU,CAAG,CAAC,EAAD,CAAK,GAAL,CAAU,GAAV,CAAe,IAAf,CAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAGV,WAAW,CAAC,UAAM,CAEhC,GAAIE,WAAW,CAAG,CAAlB,CAAqB,CACjB;AACAS,OAAO,CAACC,GAAR,CAAY,aAAZ,EACAR,QAAQ,CAAC,SAAAS,IAAI,QAAIA,CAAAA,IAAI,CAAGJ,UAAU,CAACP,WAAW,CAAG,CAAf,CAAV,EAA+BK,KAAK,CAAG,CAAvC,CAAX,EAAL,CAAR,CACAD,OAAO,CAAC,SAAAO,IAAI,QAAIA,CAAAA,IAAI,CAAGX,WAAX,EAAL,CAAP,CACH,CACJ,CAR4B,CAQ1B,CAACK,KAAD,CAAQE,UAAR,CAAoBP,WAApB,CAR0B,CAA7B,CAUAH,SAAS,CAAC,UAAM,CAChBW,SAAS,GACR,CAFQ,CAEN,CAACA,SAAD,CAAYR,WAAZ,CAAyBC,KAAzB,CAFM,CAAT,CAMA,MAAO,CAACA,KAAD,CAAQC,QAAR,CAAkBC,IAAlB,CAAwBC,OAAxB,CAAiCC,KAAjC,CAAwCC,QAAxC,CAAP,CACH,CAxBM","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n    const [score, setScore] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [level, setLevel] = useState(0);\n\n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n\n        if (rowsCleared > 0) {\n            // this is how original Tetris score is calculated\n            console.log('row cleared')\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n            setRows(prev => prev + rowsCleared);\n        }\n    }, [level, linePoints, rowsCleared])\n\n    useEffect(() => {\n    calcScore();\n    }, [calcScore, rowsCleared, score])\n\n    \n\n    return [score, setScore, rows, setRows, level, setLevel];\n}\n\n"]},"metadata":{},"sourceType":"module"}