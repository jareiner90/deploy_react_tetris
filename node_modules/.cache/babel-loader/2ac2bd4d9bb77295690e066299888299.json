{"ast":null,"code":"import _slicedToArray from\"/Users/johnreiner/Development/personalProjects/tetris-in-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Route}from'react-router-dom';import{createStage,checkCollision}from'../gameHelpers';// Styled Components\nimport{StyledTetrisWrapper,StyledTetris}from'./Styles/StyledTetris';// Custom Hooks\nimport{useInterval}from'../hooks/useInterval';import{usePlayer}from'../hooks/usePlayer';import{useStage}from'../hooks/useStage';import{useGameStatus}from'../hooks/useGameStatus';// Components\nimport Stage from'./Stage';import Display from'./Display';import StartButton from'./StartButton';import NavBar from'./NavBar';// import LogIn from './LogIn'\nimport LeaderBoard from'./LeaderBoard';import SignUp from'./SignUp';var Tetris=function Tetris(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),dropTime=_useState2[0],setDropTime=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),gameOver=_useState4[0],setGameOver=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),scores=_useState6[0],setScores=_useState6[1];var _usePlayer=usePlayer(),_usePlayer2=_slicedToArray(_usePlayer,4),player=_usePlayer2[0],updatePlayerPos=_usePlayer2[1],resetPlayer=_usePlayer2[2],playerRotate=_usePlayer2[3];var _useStage=useStage(player,resetPlayer),_useStage2=_slicedToArray(_useStage,3),stage=_useStage2[0],setStage=_useStage2[1],rowsCleared=_useStage2[2];var _useGameStatus=useGameStatus(rowsCleared),_useGameStatus2=_slicedToArray(_useGameStatus,6),score=_useGameStatus2[0],setScore=_useGameStatus2[1],rows=_useGameStatus2[2],setRows=_useGameStatus2[3],level=_useGameStatus2[4],setLevel=_useGameStatus2[5];useEffect(function(){fetch('https://react-tetris-backend.herokuapp.com/api/v1/scores').then(function(response){return response.json();}).then(function(scores){return setScores(scores);});},[gameOver]);var movePlayer=function movePlayer(dir){if(!checkCollision(player,stage,{x:dir,y:0})){updatePlayerPos({x:dir,y:0});}};var startGame=function startGame(){// Reset everything\nsetStage(createStage());setDropTime(1000);resetPlayer();setGameOver(false);setScore(0);setRows(0);setLevel(0);};var drop=function drop(){if(rows>(level+1)*10){setLevel(function(prev){return prev+1;});setDropTime(1000/(level+1)+200);}if(!checkCollision(player,stage,{x:0,y:1})){updatePlayerPos({x:0,y:1,collided:false});}else{// Game Over\nif(player.pos.y<1){setGameOver(true);setDropTime(null);// fetchLevel(level)\nfetchScore(score);}updatePlayerPos({x:0,y:0,collided:true});}};var keyUp=function keyUp(_ref){var keyCode=_ref.keyCode;if(!gameOver){if(keyCode===40){setDropTime(1000/(level+1)+200);}}};var dropPlayer=function dropPlayer(){setDropTime(null);drop();};var move=function move(_ref2){var keyCode=_ref2.keyCode;if(!gameOver){if(keyCode===37){movePlayer(-1);}else if(keyCode===39){movePlayer(1);}else if(keyCode===40){dropPlayer();}else if(keyCode===38){playerRotate(stage,1);}}};useInterval(function(){drop();},dropTime);var fetchScore=function fetchScore(){fetch(\"https://react-tetris-backend.herokuapp.com/api/v1/scores\",{method:\"POST\",headers:{'Content-Type':'application/json'},body:JSON.stringify({user_id:props.loggedinUser.id,points:score,rows:rows,level:level})});};return/*#__PURE__*/React.createElement(StyledTetrisWrapper,{role:\"button\",tabIndex:\"0\",onKeyDown:function onKeyDown(e){return move(e);},onKeyUp:keyUp},/*#__PURE__*/React.createElement(NavBar,{loggedinUser:props.loggedinUser}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/leaderBoard\",render:function render(){return/*#__PURE__*/React.createElement(LeaderBoard,{scores:scores});}}),/*#__PURE__*/React.createElement(Route,{path:\"/sign-up\",render:function render(){return/*#__PURE__*/React.createElement(SignUp,null);}}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/deploy_react_tetris/\",render:function render(){return/*#__PURE__*/React.createElement(StyledTetris,null,/*#__PURE__*/React.createElement(Stage,{stage:stage}),/*#__PURE__*/React.createElement(\"aside\",null,gameOver?/*#__PURE__*/React.createElement(Display,{gameOver:gameOver,text:\"Game Over\"}):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Display,{text:\"Score: \".concat(score)}),/*#__PURE__*/React.createElement(Display,{text:\"Rows: \".concat(rows)}),/*#__PURE__*/React.createElement(Display,{text:\"Level: \".concat(level)})),/*#__PURE__*/React.createElement(StartButton,{callback:startGame})));}}));};export default Tetris;","map":{"version":3,"sources":["/Users/johnreiner/Development/personalProjects/tetris-in-react/src/components/Tetris.js"],"names":["React","useState","useEffect","Route","createStage","checkCollision","StyledTetrisWrapper","StyledTetris","useInterval","usePlayer","useStage","useGameStatus","Stage","Display","StartButton","NavBar","LeaderBoard","SignUp","Tetris","props","dropTime","setDropTime","gameOver","setGameOver","scores","setScores","player","updatePlayerPos","resetPlayer","playerRotate","stage","setStage","rowsCleared","score","setScore","rows","setRows","level","setLevel","fetch","then","response","json","movePlayer","dir","x","y","startGame","drop","prev","collided","pos","fetchScore","keyUp","keyCode","dropPlayer","move","method","headers","body","JSON","stringify","user_id","loggedinUser","id","points","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom'\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './Styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval'\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport NavBar from './NavBar'\n// import LogIn from './LogIn'\nimport LeaderBoard from './LeaderBoard'\nimport SignUp from './SignUp'\n\nconst Tetris = (props) => {\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n    const [scores, setScores] = useState([])\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n        rowsCleared\n    );\n\n    useEffect(() => {\n        fetch('https://react-tetris-backend.herokuapp.com/api/v1/scores')\n        .then(response => response.json())\n        .then(scores => setScores(scores))\n    }, [gameOver])\n\n    const movePlayer = dir => {\n        if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n            updatePlayerPos({ x: dir, y: 0 });\n        }\n    }\n\n    const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0)\n    setLevel(0)\n    }\n\n    const drop = () => {\n\n        if (rows > (level + 1) * 10) {\n            setLevel(prev => prev + 1);\n            setDropTime(1000 / (level + 1) + 200)\n        }\n        if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n            updatePlayerPos({ x: 0, y: 1, collided: false })\n        } else {\n        // Game Over\n            if (player.pos.y < 1) {\n            setGameOver(true);\n            setDropTime(null);\n            // fetchLevel(level)\n            fetchScore(score)\n            }\n            updatePlayerPos({ x: 0, y: 0, collided: true });\n        }\n    }\n\n    const keyUp = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 40) {\n                setDropTime(1000 / (level + 1) + 200);\n            }\n        }\n    }\n\n    const dropPlayer = () => {\n    setDropTime(null)\n    drop();\n    }\n\n    const move = ({ keyCode }) => {\n    if (!gameOver) {\n        if (keyCode === 37) {\n            movePlayer(-1);\n        } else if (keyCode === 39) {\n            movePlayer(1);\n        } else if (keyCode === 40) {\n            dropPlayer();\n        } else if (keyCode === 38) {\n            playerRotate(stage, 1);\n        }\n    }\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime)\n\n    const fetchScore = () => {\n        fetch(\"https://react-tetris-backend.herokuapp.com/api/v1/scores\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user_id: props.loggedinUser.id,\n                points: score,\n                rows: rows,\n                level: level\n            })\n        })\n    }\n\n    return (\n        \n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp}>\n        <NavBar loggedinUser={props.loggedinUser}/>\n        <Route exact path=\"/leaderBoard\" render={() => <LeaderBoard scores={scores}/>}/>\n        <Route path=\"/sign-up\" render={() => <SignUp/ >} />\n        <Route exact path=\"/deploy_react_tetris/\" render={() => \n            <StyledTetris>\n            <Stage stage={stage} />\n            <aside>\n                {gameOver ? (\n                <Display gameOver={gameOver} text=\"Game Over\" />\n                ) : (\n                <div>\n                    <Display text={`Score: ${score}`} />\n                    <Display text={`Rows: ${rows}`} />\n                    <Display text={`Level: ${level}`} />\n                </div>\n                )}\n                <StartButton callback={startGame} />\n            </aside>\n            </StyledTetris>\n        }/>\n    </StyledTetrisWrapper>\n    );\n};\n\nexport default Tetris;\n"]},"metadata":{},"sourceType":"module"}