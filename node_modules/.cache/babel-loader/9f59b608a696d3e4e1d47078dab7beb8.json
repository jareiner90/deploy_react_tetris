{"ast":null,"code":"var _jsxFileName = \"/Users/johnreiner/Development/react-tetris/deploy_react_tetris/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Tetris from './components/Tetris';\nimport LogIn from './components/LogIn';\nimport SignUp from './components/SignUp';\n\nconst App = () => {\n  const [loginShow, setLoginShow] = useState(true);\n  const [signUpShow, setSignUpShow] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedinUser, setLoggedinUser] = useState({});\n  const [loggingIn, setLoggingIn] = useState(false);\n  const [errors, setErrors] = useState('');\n\n  const handleLoginShow = () => setLoginShow(true);\n\n  const handleLoginClose = () => setLoginShow(false);\n\n  const handleSignUpClose = () => setSignUpShow(false);\n\n  const handleUsernameChange = e => setUsername(e.target.value);\n\n  const handlePasswordChange = e => setPassword(e.target.value);\n\n  const loginUser = () => {\n    fetch('https://react-tetris-backend.herokuapp.com/api/v2/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => response.json()).then(user => {\n      console.log();\n\n      if (user.status === 'success') {\n        localStorage.setItem('userToken', user.token);\n        setLoggingIn(false);\n        handleLoginClose();\n      } else {\n        console.log(user.message);\n        setLoggingIn(false);\n        setErrors(user.message);\n      }\n    });\n    setLoggingIn(true);\n  };\n\n  const handleLoginSubmit = e => {\n    e.preventDefault();\n    loginUser();\n  };\n\n  const handleCreateAccountClick = () => {\n    handleLoginClose();\n    setSignUpShow(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LogIn, {\n    loggingIn: loggingIn,\n    username: username,\n    password: password,\n    handlePasswordChange: handlePasswordChange,\n    handleUsernameChange: handleUsernameChange,\n    handleCreateAccountClick: handleCreateAccountClick,\n    handleLoginSubmit: handleLoginSubmit,\n    handleLoginClose: handleLoginClose,\n    loginShow: loginShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SignUp, {\n    handleLoginShow: handleLoginShow,\n    signUpShow: signUpShow,\n    handleSignUpClose: handleSignUpClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Tetris, {\n    loggedinUser: loggedinUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/johnreiner/Development/react-tetris/deploy_react_tetris/src/App.js"],"names":["React","useState","Tetris","LogIn","SignUp","App","loginShow","setLoginShow","signUpShow","setSignUpShow","username","setUsername","password","setPassword","loggedinUser","setLoggedinUser","loggingIn","setLoggingIn","errors","setErrors","handleLoginShow","handleLoginClose","handleSignUpClose","handleUsernameChange","e","target","value","handlePasswordChange","loginUser","fetch","method","headers","body","JSON","stringify","then","response","json","user","console","log","status","localStorage","setItem","token","message","handleLoginSubmit","preventDefault","handleCreateAccountClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport './App.css';\nimport Tetris from './components/Tetris';\nimport LogIn from './components/LogIn';\nimport SignUp from './components/SignUp';\n\nconst App = () =>  {\n\n  const [loginShow, setLoginShow] = useState(true);\n  const [signUpShow, setSignUpShow] = useState(false)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [loggedinUser, setLoggedinUser] = useState({})\n  const [loggingIn, setLoggingIn] = useState(false)\n  const [errors, setErrors] = useState('')\n\n  const handleLoginShow = () => setLoginShow(true);\n  const handleLoginClose = () => setLoginShow(false);\n  const handleSignUpClose = () => setSignUpShow(false)\n\n  const handleUsernameChange = e => setUsername(e.target.value)\n  const handlePasswordChange = e => setPassword(e.target.value)\n\n    const loginUser = () => {\n        fetch('https://react-tetris-backend.herokuapp.com/api/v2/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({username, password}),\n        })\n        .then(response => response.json())\n        .then(user => {\n            console.log()\n            if (user.status === 'success') {\n                localStorage.setItem('userToken', user.token);\n                setLoggingIn(false)\n                handleLoginClose()\n            } else {\n                console.log(user.message)\n                setLoggingIn(false)\n                setErrors(user.message)\n            }\n        })\n        setLoggingIn(true)\n    }\n\n  const handleLoginSubmit = e => {\n    e.preventDefault()\n    loginUser()\n  }\n\n  const handleCreateAccountClick = () => {\n    handleLoginClose()\n    setSignUpShow(true)\n  }\n\n  return (\n    <div className=\"App\">\n      \n      <LogIn loggingIn={loggingIn} username={username} password={password} handlePasswordChange={handlePasswordChange} handleUsernameChange={handleUsernameChange} handleCreateAccountClick={handleCreateAccountClick} handleLoginSubmit={handleLoginSubmit} handleLoginClose={handleLoginClose} loginShow={loginShow}/>\n      <SignUp handleLoginShow={handleLoginShow} signUpShow={signUpShow} handleSignUpClose={handleSignUpClose} />\n      <Tetris loggedinUser={loggedinUser} />\n\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}