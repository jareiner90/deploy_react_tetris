{"version":3,"sources":["img/background.jpg","gameHelpers.js","components/Styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/Styles/StyledStage.js","components/Styles/StyledCell.js","components/Cell.js","components/Stage.js","components/Styles/StyledDisplay.js","components/Display.js","components/Styles/StyledStartButton.js","components/StartButton.js","components/NavBar.js","components/Score.js","components/LeaderBoard.js","components/SignUp.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","components/LogIn.js","components/DisplayUser.js","App.js","index.js"],"names":["module","exports","createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","React","memo","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","NavBar","to","id","handleUserModalShow","loggedinUser","username","Score","place","score","rows","level","leaderBoard","Table","striped","bordered","hover","variant","scores","count","user","points","renderAllScores","SignUp","setUsername","password","setPassword","confirmedPassword","setConfirmedPassword","Modal","show","signUpShow","Header","Title","Body","Form","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","status","handleSignUpClose","handleLoginShow","console","log","Group","Label","Control","placeholder","onChange","target","Footer","Button","form","Tetris","dropTime","setDropTime","setGameOver","setScores","setUserScores","lastScore","setLastScore","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","parse","offset","usePlayer","updatePlayerPos","playerRotate","setScore","setRows","setLevel","linePoints","calcScore","useGameStatus","localStorage","getItem","all_scores","user_scores","movePlayer","startGame","drop","fetchScore","move","keyCode","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","user_id","role","tabIndex","onKeyDown","onKeyUp","exact","path","render","LogIn","loginShow","onHide","handleLoginClose","backdrop","keyboard","handleLoginSubmit","handleUsernameChange","handlePasswordChange","errors","Text","className","handleCreateAccountClick","loggingIn","style","fontFamily","disabled","Spinner","as","animation","size","aria-hidden","DisplayUser","userModalShow","handleUserModalClose","aria-labelledby","closeButton","logout","App","setLoginShow","setSignUpShow","setLoggedinUser","setLoggingIn","setErrors","setUserModalShow","getUser","setItem","token","message","removeItem","window","location","reload","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ebb1b5e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.c408b725.jpg\";","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, 'clear']),\n  );\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // 1. Check that we're on an actual Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // 2. Check that our move is inside the game areas height (y)\n          // We shouldn't go through the bottom of the play area\n          !stage[y + player.pos.y + moveY] ||\n          // 3. Check that our move is inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // 4. Check that the cell wer'e moving to isn't set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};","import styled from 'styled-components';\n\nimport bgImage from '../../img/background.jpg';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;","export const TETROMINOS = {\n    0: { shape: [[0]], color: '0, 0, 0' },\n    I: {\n      shape: [[0, 'I', 0, 0], \n              [0, 'I', 0, 0], \n              [0, 'I', 0, 0], \n              [0, 'I', 0, 0]],\n      color: '80, 227, 230',\n    },\n    J: {\n      shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]],\n      color: '36, 95, 223',\n    },\n    L: {\n      shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n      color: '223, 173, 36',\n    },\n    O: {\n      shape: [['O', 'O'], ['O', 'O']],\n      color: '223, 217, 36',\n    },\n    S: {\n      shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]],\n      color: '48, 211, 56',\n    },\n    T: {\n      shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n      color: '132, 61, 198',\n    },\n    Z: {\n      shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]],\n      color: '227, 78, 78',\n    },\n  };\n  \n  export const randomTetromino = () => {\n    const tetrominos = 'IJLOSTZ';\n    const randTetromino =\n      tetrominos[Math.floor(Math.random() * tetrominos.length)];\n    return TETROMINOS[randTetromino];\n  };","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n\n    setRowsCleared(0);\n\n    const sweepRows = newStage => \n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, [])\n\n    const updateStage = prevStage => {\n      // First flush the stage\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\n      );\n\n      // Then draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n      // Then check if we collided\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage)\n      }\n\n      return newStage;\n    };\n\n    setStage(prev => updateStage(prev));\n  }, [player, resetPlayer]);\n\n  return [stage, setStage, rowsCleared];\n};\n","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n`;","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`\n","import React from 'react';\nimport { StyledCell } from './Styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({ type }) => (\n    \n    <StyledCell type={type} color={TETROMINOS[type].color}></StyledCell>\n)\n\nexport default React.memo(Cell);\n","import React from 'react';\nimport { StyledStage } from './Styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n    <StyledStage width={stage[0].length} height={stage.length}>\n        {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n    </StyledStage>\n);\n\nexport default Stage;\n","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center; \n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;","import React from 'react';\nimport { StyledDisplay } from './Styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n    box-sizing: border-box;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    border: none;\n    color: white;\n    background: #333;\n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    font-size: 1rem;\n    outline: none;\n    cursor: pointer;\n`","import React from 'react';\nimport { StyledStartButton } from './Styles/StyledStartButton';\n\nconst StartButton = ({ callback }) => (\n    <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n)\n\nexport default StartButton;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function NavBar(props) {\n\n    return (\n\n        <div>\n            <ul>\n                <Link to=\"/leaderBoard\"><li>Leader Board</li></Link>\n                <Link to='/deploy_react_tetris/'><li>Tetris</li></Link>\n                <li id='user' onClick={props.handleUserModalShow}>{props.loggedinUser.username}</li>\n            </ul>\n        </div>\n\n    )\n}\n","import React from 'react'\n\nexport default function Score(props) {\n\n    return (\n        <tr>\n            <td>{props.place}</td>\n            <td>{props.username}</td>\n            <td>{props.score}</td>\n            <td>{props.rows}</td>\n            <td>{props.level}</td>\n        </tr>\n    )\n}\n","import React from 'react'\nimport {Table} from 'react-bootstrap'\nimport Score from './Score'\n\nexport default function leaderBoard(props) {\n    \n\n    const renderAllScores = () => {\n\n        if (props.scores.length > 0) {\n            let count = 0\n            return props.scores.map(score => {\n                count ++\n                return <Score place={count} username={score.user.username} key={score.id} id={score.id} score={score.points} level={score.level} rows={score.rows} />\n            })            \n        }\n    }\n\n\n\n    return (\n        <Table striped bordered hover variant=\"dark\">\n            <thead>\n                <tr>\n                    <th>Rank</th>\n                    <th>Username</th>\n                    <th>Score</th>\n                    <th>Rows</th>\n                    <th>Level</th>\n                </tr>\n            </thead>\n            <tbody>\n                {renderAllScores()}\n            </tbody>\n        </Table>\n    )\n}\n","import React, { useState } from 'react'\nimport {Button, Modal, Form} from 'react-bootstrap'\n\n\nexport default function SignUp(props) {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmedPassword, setConfirmedPassword] = useState('')\n\n    const handleUsernameChange = e => setUsername(e.target.value)\n    const handlePasswordChange = e => setPassword(e.target.value)\n    const handleConfirmedPasswordChange = e => setConfirmedPassword(e.target.value)\n\n\n    const onSubmit = e => {\n        e.preventDefault()\n\n        fetch(\"https://react-tetris-backend.herokuapp.com/api/v2/users\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: username,\n                password: password,\n            })\n        })\n        .then(response => response.json())\n        .then(response => {\n            if (response.status === \"SUCCESS\") {\n                props.handleSignUpClose()\n                props.handleLoginShow()\n            } else {\n                console.log(response)\n            }\n        })\n    }\n\n    return (\n        <div>\n            <Modal show={props.signUpShow} >\n                <Modal.Header>\n                <Modal.Title>Create an Account!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={onSubmit} id=\"form\">\n                    <Form.Group>\n                        <Form.Label>Create a Username</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={handleUsernameChange} value={username} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Create a Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={handlePasswordChange} value={password} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleConfirmedPasswordChange} value={confirmedPassword} />\n                    </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" type='submit' form='form' >\n                        Sign Up!\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom'\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './Styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval'\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport NavBar from './NavBar'\n// import LogIn from './LogIn'\nimport LeaderBoard from './LeaderBoard'\nimport SignUp from './SignUp'\n\nconst Tetris = (props) => {\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n    const [scores, setScores] = useState([])\n    const [userScores, setUserScores] = useState([])\n    const [lastScore, setLastScore] = useState({})\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n        rowsCleared\n    );\n\n    useEffect(() => {\n        fetch('https://react-tetris-backend.herokuapp.com/api/v2/scores',{\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('userToken')\n            }\n        })\n        .then(response => response.json())\n        .then(scores => {\n            // console.log(scores)\n            setScores(scores.all_scores)\n            setUserScores(scores.user_scores)\n        })\n    }, [lastScore, props.loggedinUser])\n\n    const movePlayer = dir => {\n        if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n            updatePlayerPos({ x: dir, y: 0 });\n        }\n    }\n\n    const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0)\n    setLevel(0)\n    }\n\n    const drop = () => {\n\n        if (rows > (level + 1) * 10) {\n            setLevel(prev => prev + 1);\n            setDropTime(1000 / (level + 1) + 200)\n        }\n        if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n            updatePlayerPos({ x: 0, y: 1, collided: false })\n        } else {\n        // Game Over\n            if (player.pos.y < 1) {\n            setGameOver(true);\n            setDropTime(null);\n            // fetchLevel(level)\n            fetchScore()\n            }\n            updatePlayerPos({ x: 0, y: 0, collided: true });\n        }\n    }\n\n    const keyUp = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 40) {\n                setDropTime(1000 / (level + 1) + 200);\n            }\n        }\n    }\n\n    const dropPlayer = () => {\n    setDropTime(null)\n    drop();\n    }\n\n    const move = ({ keyCode }) => {\n    if (!gameOver) {\n        if (keyCode === 37) {\n            movePlayer(-1);\n        } else if (keyCode === 39) {\n            movePlayer(1);\n        } else if (keyCode === 40) {\n            dropPlayer();\n        } else if (keyCode === 38) {\n            playerRotate(stage, 1);\n        }\n    }\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime)\n\n    const fetchScore = () => {\n        fetch(\"https://react-tetris-backend.herokuapp.com/api/v2/scores\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('userToken')\n            },\n            body: JSON.stringify({\n                user_id: props.loggedinUser.id,\n                points: score,\n                rows: rows,\n                level: level\n            })\n        })\n        .then(response => response.json())\n        .then(score => {\n            setLastScore(score)\n        })\n    }\n\n    return (\n        \n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp}>\n        <NavBar \n            loggedinUser={props.loggedinUser}\n            handleUserModalShow={props.handleUserModalShow}\n        />\n        <Route exact path=\"/leaderBoard\" render={() => <LeaderBoard scores={scores}/>}/>\n        <Route path=\"/sign-up\" render={() => <SignUp/ >} />\n        <Route exact path=\"/deploy_react_tetris/\" render={() => \n            <StyledTetris>\n            <Stage stage={stage} />\n            <aside>\n                {gameOver ? (\n                <Display gameOver={gameOver} text=\"Game Over\" />\n                ) : (\n                <div>\n                    <Display text={`Score: ${score}`} />\n                    <Display text={`Rows: ${rows}`} />\n                    <Display text={`Level: ${level}`} />\n                </div>\n                )}\n                <StartButton callback={startGame} />\n            </aside>\n            </StyledTetris>\n        }/>\n    </StyledTetrisWrapper>\n    );\n};\n\nexport default Tetris;\n","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  const rotate = (matrix, dir) => {\n    // make rows into cols \n\n    const rotatedTetro = matrix.map((_, index) => \n      matrix.map (col => col[index]),\n      );\n    // reverse each row to get a rotated matix\n    if (dir > 0) return rotatedTetro.map(row => row.reverse());\n    return rotatedTetro.reverse()\n  };\n\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset >  0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n\n    setPlayer(clonedPlayer);\n  }\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\n      collided,\n    }))\n  }\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    })\n  }, [])\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n}","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n    const [score, setScore] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [level, setLevel] = useState(0);\n\n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n\n        if (rowsCleared > 0) {\n            // this is how original Tetris score is calculated\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n            setRows(prev => prev + rowsCleared);\n        }\n    }, [level, linePoints, rowsCleared])\n\n    useEffect(() => {\n    calcScore();\n    }, [calcScore, rowsCleared, score])\n\n    \n\n    return [score, setScore, rows, setRows, level, setLevel];\n}\n\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react'\nimport {Button, Modal, Form, Spinner} from 'react-bootstrap'\n\nexport default function LogIn(props) {\n    \n    return (\n            <Modal show={props.loginShow} onHide={props.handleLoginClose} backdrop=\"static\" keyboard={false} >\n                <Modal.Header>\n                <Modal.Title>Welcome to Tetris in React!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={props.handleLoginSubmit} id=\"form\">\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={props.handleUsernameChange} value={props.username} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={props.handlePasswordChange} value={props.password} />\n                    </Form.Group>\n                    </Form>\n                    {props.errors}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Form.Text className=\"text-muted\">\n                                Not registered? <Button variant=\"link\" onClick={props.handleCreateAccountClick}>Create an account</Button>\n                    </Form.Text>\n                    {props.loggingIn === true ?   <Button style={{fontFamily : \"Pixel, Arial, Helvetica, sans-serif\"}} variant=\"dark\" disabled><Spinner variant=\"light\" as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/>Loading...</Button> : <Button variant=\"primary\" type='submit' form='form' >Login</Button>}\n                    \n                </Modal.Footer>\n            </Modal>\n    )\n}","import React from 'react'\nimport { Modal, Button } from 'react-bootstrap'\n\nexport default function DisplayUser(props) {\n\n\n\n    return (\n        <Modal\n            size=\"lg\"\n            show={props.userModalShow}\n            onHide={props.handleUserModalClose}\n            aria-labelledby=\"example-modal-sizes-title-lg\"\n        >\n            <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\n                Would you like to Logout?\n            </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Button variant=\"danger\" onClick={props.logout}>Logout</Button>\n            <Button variant=\"success\">Keep Playing</Button>\n            </Modal.Body>\n        </Modal>\n    )\n}\n","import React, { useState, useEffect } from 'react'\n\nimport './App.css';\nimport Tetris from './components/Tetris';\nimport LogIn from './components/LogIn';\nimport SignUp from './components/SignUp';\nimport NavBar from './components/NavBar'\nimport DisplayUser from './components/DisplayUser'\n\nconst App = () =>  {\n\n  const [loginShow, setLoginShow] = useState(false);\n  const [signUpShow, setSignUpShow] = useState(false)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [loggedinUser, setLoggedinUser] = useState({})\n  const [loggingIn, setLoggingIn] = useState(false)\n  const [errors, setErrors] = useState('')\n  const [userModalShow, setUserModalShow] = useState(false)\n\n  const handleLoginShow = () => setLoginShow(true);\n  const handleLoginClose = () => setLoginShow(false);\n  const handleSignUpClose = () => setSignUpShow(false)\n  const handleUserModalShow = () => setUserModalShow(true)\n  const handleUserModalClose = () => setUserModalShow(false)\n\n  const handleUsernameChange = e => setUsername(e.target.value)\n  const handlePasswordChange = e => setPassword(e.target.value)\n\n  const logout = () => {\n    localStorage.removeItem('userToken');\n    window.location.reload(false);\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem('userToken')) {\n      getUser()\n    } else {\n      setLoginShow(true)\n    }\n  }, [])\n\n  const getUser = () => {\n    fetch(`https://react-tetris-backend.herokuapp.com/api/v2/getuser`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"bearer \" + localStorage.getItem('userToken')\n      }\n    })\n    .then(response => response.json())\n    .then(user => setLoggedinUser(user))\n  }\n\n  const loginUser = () => {\n    fetch('https://react-tetris-backend.herokuapp.com/api/v2/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({username, password}),\n    })\n    .then(response => response.json())\n    .then(user => {\n      if (user.status === 'success') {\n          localStorage.setItem('userToken', user.token);\n          setLoggedinUser({id: user.id, username: user.username})\n          setLoggingIn(false)\n          handleLoginClose()\n      } else {\n          setLoggingIn(false)\n          setErrors(user.message)\n      }\n    })\n    setLoggingIn(true)\n  }\n\n  const handleLoginSubmit = e => {\n    e.preventDefault()\n    loginUser()\n  }\n\n  const handleCreateAccountClick = () => {\n    handleLoginClose()\n    setSignUpShow(true)\n  }\n\n  return (\n    <div className=\"App\">\n\n      <LogIn \n        errors={errors} \n        loggingIn={loggingIn} \n        username={username} \n        password={password} \n        handlePasswordChange={handlePasswordChange} \n        handleUsernameChange={handleUsernameChange} \n        handleCreateAccountClick={handleCreateAccountClick} \n        handleLoginSubmit={handleLoginSubmit} \n        handleLoginClose={handleLoginClose} \n        loginShow={loginShow}\n\n      />\n\n      <SignUp \n        handleLoginShow={handleLoginShow} \n        signUpShow={signUpShow} \n        handleSignUpClose={handleSignUpClose}\n\n      />\n\n      <DisplayUser \n        userModalShow={userModalShow}\n        handleUserModalClose={handleUserModalClose}\n        logout={logout}\n      />\n\n      <Tetris \n        loggedinUser={loggedinUser}\n        handleUserModalShow={handleUserModalShow}\n        \n      />\n\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\n"],"sourceRoot":""}