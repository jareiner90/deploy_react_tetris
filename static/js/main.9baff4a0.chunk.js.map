{"version":3,"sources":["img/background.jpg","gameHelpers.js","components/Styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/Styles/StyledStage.js","components/Styles/StyledCell.js","components/Cell.js","components/Stage.js","components/Styles/StyledDisplay.js","components/Display.js","components/Styles/StyledStartButton.js","components/StartButton.js","components/NavBar.js","components/Score.js","components/LeaderBoard.js","components/Name.js","components/GameOver.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","components/DisplayUser.js","App.js","index.js"],"names":["module","exports","createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","React","memo","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","NavBar","to","id","handleNameModalShow","name","Score","place","score","rows","level","LeaderBoard","scores","setScores","fetch","method","headers","then","response","json","all_scores","Table","striped","bordered","hover","variant","count","points","renderAllScores","Name","Modal","show","nameShow","onHide","handleNameModalClose","Header","closeButton","Title","Body","Form","Group","Label","Control","onChange","handleNameChange","Footer","Button","GameOver","gameOverShow","handleGameOverModalClose","handleGameOverNameChange","body","JSON","stringify","Tetris","dropTime","setDropTime","setGameOver","setName","setNameShow","setGameOverShow","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","parse","offset","usePlayer","updatePlayerPos","playerRotate","setScore","setRows","setLevel","linePoints","calcScore","useGameStatus","localStorage","getItem","handleGameOverModalShow","setItem","movePlayer","startGame","drop","move","keyCode","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","target","exact","path","render","DisplayUser","size","userModalShow","handleUserModalClose","aria-labelledby","logout","App","setUserModalShow","className","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9baff4a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.c408b725.jpg\";","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, 'clear']),\n  );\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // 1. Check that we're on an actual Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // 2. Check that our move is inside the game areas height (y)\n          // We shouldn't go through the bottom of the play area\n          !stage[y + player.pos.y + moveY] ||\n          // 3. Check that our move is inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // 4. Check that the cell wer'e moving to isn't set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};","import styled from 'styled-components';\n\nimport bgImage from '../../img/background.jpg';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;","export const TETROMINOS = {\n    0: { shape: [[0]], color: '0, 0, 0' },\n    I: {\n      shape: [[0, 'I', 0, 0], \n              [0, 'I', 0, 0], \n              [0, 'I', 0, 0], \n              [0, 'I', 0, 0]],\n      color: '80, 227, 230',\n    },\n    J: {\n      shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]],\n      color: '36, 95, 223',\n    },\n    L: {\n      shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n      color: '223, 173, 36',\n    },\n    O: {\n      shape: [['O', 'O'], ['O', 'O']],\n      color: '223, 217, 36',\n    },\n    S: {\n      shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]],\n      color: '48, 211, 56',\n    },\n    T: {\n      shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n      color: '132, 61, 198',\n    },\n    Z: {\n      shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]],\n      color: '227, 78, 78',\n    },\n  };\n  \n  export const randomTetromino = () => {\n    const tetrominos = 'IJLOSTZ';\n    const randTetromino =\n      tetrominos[Math.floor(Math.random() * tetrominos.length)];\n    return TETROMINOS[randTetromino];\n  };","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n\n    setRowsCleared(0);\n\n    const sweepRows = newStage => \n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, [])\n\n    const updateStage = prevStage => {\n      // First flush the stage\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\n      );\n\n      // Then draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n      // Then check if we collided\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage)\n      }\n\n      return newStage;\n    };\n\n    setStage(prev => updateStage(prev));\n  }, [player, resetPlayer]);\n\n  return [stage, setStage, rowsCleared];\n};\n","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n`;","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`\n","import React from 'react';\nimport { StyledCell } from './Styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({ type }) => (\n    \n    <StyledCell type={type} color={TETROMINOS[type].color}></StyledCell>\n)\n\nexport default React.memo(Cell);\n","import React from 'react';\nimport { StyledStage } from './Styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n    <StyledStage width={stage[0].length} height={stage.length}>\n        {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n    </StyledStage>\n);\n\nexport default Stage;\n","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center; \n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;","import React from 'react';\nimport { StyledDisplay } from './Styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n    box-sizing: border-box;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    border: none;\n    color: white;\n    background: #333;\n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    font-size: 1rem;\n    outline: none;\n    cursor: pointer;\n`","import React from 'react';\nimport { StyledStartButton } from './Styles/StyledStartButton';\n\nconst StartButton = ({ callback }) => (\n    <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n)\n\nexport default StartButton;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function NavBar(props) {\n\n    return (\n\n        <div>\n            <ul>\n                <Link to=\"/leaderBoard\"><li>Leader Board</li></Link>\n                <Link to='/deploy_react_tetris/'><li>Tetris</li></Link>\n                <li id='user' onClick={props.handleNameModalShow}>Name: {props.name}</li>\n            </ul>\n        </div>\n\n    )\n}\n","import React from 'react'\n\nexport default function Score(props) {\n\n    return (\n        <tr>\n            <td>{props.place}</td>\n            <td>{props.name === '' ? 'Guest' : props.name}</td>\n            <td>{props.score}</td>\n            <td>{props.rows}</td>\n            <td>{props.level}</td>\n        </tr>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport {Table} from 'react-bootstrap'\nimport Score from './Score'\n\nexport default function LeaderBoard() {\n\n    const [scores, setScores] = useState([])\n\n    useEffect(() => {\n        fetch('https://react-tetris-backend.herokuapp.com/api/v2/scores',{\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n        .then(response => response.json())\n        .then(scores => {\n            setScores(scores.all_scores)\n        })\n    }, [])\n    \n\n    const renderAllScores = () => {\n        if (scores.length > 0) {\n            let count = 0\n            return scores.map(score => {\n                count ++\n                return <Score place={count} name={score.name} key={score.id} id={score.id} score={score.points} level={score.level} rows={score.rows} />\n            })            \n        }\n    }\n\n\n\n    return (\n        <Table striped bordered hover variant=\"dark\">\n            <thead>\n                <tr>\n                    <th>Rank</th>\n                    <th>Name</th>\n                    <th>Score</th>\n                    <th>Rows</th>\n                    <th>Level</th>\n                </tr>\n            </thead>\n            <tbody>\n                {renderAllScores()}\n            </tbody>\n        </Table>\n    )\n}\n","import React from 'react'\nimport { Modal, Button, Form } from 'react-bootstrap'\n\nexport default function Name(props) {\n\n    return (\n        <>\n            <Modal show={props.nameShow} onHide={props.handleNameModalClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Enter Your Name</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group>\n                        <Form.Label>Please enter a name to use for your score:</Form.Label>\n                        <Form.Control type=\"text\" value={props.name} onChange={props.handleNameChange} />\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={props.handleNameModalClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n","import React from 'react'\nimport { Modal, Button, Form } from 'react-bootstrap'\n\nexport default function GameOver(props) {\n\n    const fetchScore = () => {\n        \n        fetch(\"https://react-tetris-backend.herokuapp.com/api/v2/scores\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: props.name,\n                points: props.score,\n                rows: props.rows,\n                level: props.level\n            })\n        })\n        props.handleGameOverModalClose()\n    }\n\n    return (\n        <Modal show={props.gameOverShow} onHide={props.handleGameOverModalClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Game Over</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <p>Score: {props.score}</p>\n                <p>Rows: {props.rows}</p>\n                <p>Level: {props.level}</p>\n                <Form.Group>\n                    <Form.Label>Please enter Your name for your score:</Form.Label>\n                    <Form.Control type=\"text\" value={props.name} onChange={props.handleGameOverNameChange} />\n                </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"primary\" onClick={fetchScore}>\n                    Submit\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom'\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './Styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval'\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport NavBar from './NavBar'\nimport LeaderBoard from './LeaderBoard'\nimport Name from './Name'\nimport GameOver from './GameOver'\n\nconst Tetris = (props) => {\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n    const [lastScore, setLastScore] = useState({})\n    const [name, setName] = useState('')\n    const [nameShow, setNameShow] = useState(false)\n    const [gameOverShow, setGameOverShow] = useState(false)\n\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n        rowsCleared\n    );\n\n    useEffect(() => {\n        if (localStorage.getItem('tetrisName') !== \"\") {\n            setName(localStorage.getItem('tetrisName'))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (gameOver) {\n            handleGameOverModalShow(true)\n        }\n    }, [gameOver])\n\n    useEffect(() => {\n        localStorage.setItem('tetrisName', name)\n    }, [name])\n\n    const movePlayer = dir => {\n        if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n            updatePlayerPos({ x: dir, y: 0 });\n        }\n    }\n\n    const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0)\n    setLevel(0)\n    }\n\n    const drop = () => {\n\n        if (rows > (level + 1) * 10) {\n            setLevel(prev => prev + 1);\n            setDropTime(1000 / (level + 1) + 200)\n        }\n        if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n            updatePlayerPos({ x: 0, y: 1, collided: false })\n        } else {\n        // Game Over\n            if (player.pos.y < 1) {\n            setGameOver(true);\n            setDropTime(null);\n            }\n            updatePlayerPos({ x: 0, y: 0, collided: true });\n        }\n    }\n\n    const keyUp = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 40) {\n                setDropTime(1000 / (level + 1) + 200);\n            }\n        }\n    }\n\n    const dropPlayer = () => {\n    setDropTime(null)\n    drop();\n    }\n\n    const move = ({ keyCode }) => {\n    if (!gameOver) {\n        if (keyCode === 37) {\n            movePlayer(-1);\n        } else if (keyCode === 39) {\n            movePlayer(1);\n        } else if (keyCode === 40) {\n            dropPlayer();\n        } else if (keyCode === 38) {\n            playerRotate(stage, 1);\n        }\n    }\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime)\n\n\n\n    const handleNameModalShow = () => setNameShow(true)\n    const handleNameModalClose = () => setNameShow(false)\n\n    const handleNameChange = e => setName(e.target.value)\n\n    const handleGameOverModalShow = () => setGameOverShow(true)\n    const handleGameOverModalClose = () => setGameOverShow(false)\n\n    const handleGameOverNameChange = e => setName(e.target.value)\n\n\n    return (\n        \n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp}>\n        <NavBar \n            name={name}\n            handleNameModalShow={handleNameModalShow}\n        />\n        <Name \n            nameShow={nameShow} \n            handleNameModalClose={handleNameModalClose} \n            setName={setName} \n            handleNameChange={handleNameChange} \n            name={name}\n\n            />\n        <GameOver\n            handleGameOverNameChange={handleGameOverNameChange} \n            handleGameOverModalClose={handleGameOverModalClose} \n            gameOverShow={gameOverShow}\n            name={name}\n            score={score}\n            level={level}\n            rows={rows}\n            />\n        <Route exact path=\"/leaderBoard\" render={() => <LeaderBoard />}/>\n        \n        <Route exact path=\"/deploy_react_tetris/\" render={() => \n            <StyledTetris>\n            <Stage stage={stage} />\n            <aside>\n                {gameOver ? (\n                <Display gameOver={gameOver} text=\"Game Over\" />\n                ) : (\n                <div>\n                    <Display text={`Score: ${score}`} />\n                    <Display text={`Rows: ${rows}`} />\n                    <Display text={`Level: ${level}`} />\n                </div>\n                )}\n                <StartButton callback={startGame} />\n            </aside>\n            </StyledTetris>\n        }/>\n    </StyledTetrisWrapper>\n    );\n};\n\nexport default Tetris;\n","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  const rotate = (matrix, dir) => {\n    // make rows into cols \n\n    const rotatedTetro = matrix.map((_, index) => \n      matrix.map (col => col[index]),\n      );\n    // reverse each row to get a rotated matix\n    if (dir > 0) return rotatedTetro.map(row => row.reverse());\n    return rotatedTetro.reverse()\n  };\n\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset >  0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n\n    setPlayer(clonedPlayer);\n  }\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\n      collided,\n    }))\n  }\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    })\n  }, [])\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n}","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n    const [score, setScore] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [level, setLevel] = useState(0);\n\n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n\n        if (rowsCleared > 0) {\n            // this is how original Tetris score is calculated\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n            setRows(prev => prev + rowsCleared);\n        }\n    }, [level, linePoints, rowsCleared])\n\n    useEffect(() => {\n    calcScore();\n    }, [calcScore, rowsCleared, score])\n\n    \n\n    return [score, setScore, rows, setRows, level, setLevel];\n}\n\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react'\nimport { Modal, Button } from 'react-bootstrap'\n\nexport default function DisplayUser(props) {\n\n\n\n    return (\n        <Modal\n            size=\"lg\"\n            show={props.userModalShow}\n            onHide={props.handleUserModalClose}\n            aria-labelledby=\"example-modal-sizes-title-lg\"\n        >\n            <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\n                Would you like to Logout?\n            </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Button variant=\"danger\" onClick={props.logout}>Logout</Button>{' '}\n            <Button variant=\"success\">Keep Playing</Button>\n            </Modal.Body>\n        </Modal>\n    )\n}\n","import React, { useState, useEffect } from 'react'\n\nimport './App.css';\nimport Tetris from './components/Tetris';\nimport DisplayUser from './components/DisplayUser'\n\nconst App = () =>  {\n\n  const [userModalShow, setUserModalShow] = useState(false)\n\n  const handleUserModalShow = () => setUserModalShow(true)\n  const handleUserModalClose = () => setUserModalShow(false)\n\n\n\n\n\n  return (\n    <div className=\"App\">\n\n      <DisplayUser \n        userModalShow={userModalShow}\n        handleUserModalClose={handleUserModalClose}\n      />\n\n      <Tetris />\n\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\n"],"sourceRoot":""}