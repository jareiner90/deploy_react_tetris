{"version":3,"sources":["img/background.jpg","components/LogIn.js","components/SignUp.js","gameHelpers.js","components/Styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/Styles/StyledStage.js","components/Styles/StyledCell.js","components/Cell.js","components/Stage.js","components/Styles/StyledDisplay.js","components/Display.js","components/Styles/StyledStartButton.js","components/StartButton.js","components/NavBar.js","components/Score.js","components/LeaderBoard.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","components/MainBody.js","App.js","index.js"],"names":["module","exports","LogIn","props","useState","username","setUsername","password","setPassword","user","setUser","loginUser","users","find","handleLoginClose","alert","useEffect","logginUser","id","Modal","show","loginShow","onHide","Header","closeButton","Title","Body","Form","onSubmit","e","preventDefault","Group","Label","Control","type","placeholder","onChange","target","value","Text","className","Button","variant","onClick","handleCreateAccountClick","Footer","form","confirmedPassword","setConfirmedPassword","signUpShow","handleSignUpClose","fetch","method","headers","body","JSON","stringify","handleLoginShow","createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","setStage","rowsCleared","setRowsCleared","updateStage","prevStage","newStage","map","row","cell","forEach","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","height","width","StyledCell","React","memo","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","NavBar","to","Score","place","score","rows","level","leaderBoard","Table","striped","bordered","hover","count","scores","points","renderScores","Tetris","dropTime","setDropTime","setGameOver","setScores","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","parse","offset","usePlayer","updatePlayerPos","playerRotate","setScore","setRows","setLevel","linePoints","calcScore","console","log","useGameStatus","then","response","json","movePlayer","startGame","drop","fetchScore","move","keyCode","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","user_id","userId","role","tabIndex","onKeyDown","onKeyUp","exact","path","render","MainBody","App","setUsers","setUserId","setLoginShow","setSignUpShow","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c8f9adf6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.c408b725.jpg\";","import React, { useState, useEffect } from 'react'\nimport {Button, Modal, Form} from 'react-bootstrap'\n\nexport default function LogIn(props) {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [user, setUser] = useState({})\n\n    const handleUsernameChange = e => setUsername(e.target.value)\n    const handlePasswordChange = e => setPassword(e.target.value)\n\n    const onSubmit = e => {\n        e.preventDefault()\n        loginUser()\n    }\n\n    const loginUser = () => {\n        let user = props.users.find(user => user.username === username)\n        if (user && user.password ===  password) {\n            setUser(user)\n            props.handleLoginClose()\n        } else {\n            alert('Wrong Username or Password')\n        }\n    }\n\n    useEffect(() => {\n        props.logginUser(user.id)\n    }, [user])\n    \n    \n    return (\n        <div>\n            <Modal show={props.loginShow} onHide={props.handleLoginClose} >\n                <Modal.Header closeButton>\n                <Modal.Title>Welcome to Tetris in React!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={onSubmit} id=\"form\">\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={handleUsernameChange} value={username} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={handlePasswordChange} value={password} />\n                    </Form.Group>\n                    <Form.Text className=\"text-muted\">\n                            Not registered? <Button variant=\"link\" onClick={props.handleCreateAccountClick}>Create an account</Button>\n                    </Form.Text>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" type='submit' form='form' >\n                        Login\n                    </Button>\n                    <Button variant=\"secondary\" onClick={props.handleLoginClose}>\n                        Login as guest\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport {Button, Modal, Form} from 'react-bootstrap'\n\n\nexport default function LogIn(props) {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmedPassword, setConfirmedPassword] = useState('')\n\n    const handleUsernameChange = e => setUsername(e.target.value)\n    const handlePasswordChange = e => setPassword(e.target.value)\n    const handleConfirmedPasswordChange = e => setConfirmedPassword(e.target.value)\n\n\n    const onSubmit = e => {\n        e.preventDefault()\n        if (username !== '' && password !== '' && password === confirmedPassword) {\n            fetch(\"https://blooming-brushlands-29268.herokuapp.com/api/v1/users\", {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: username,\n                    password: password,\n                })\n            })\n            props.handleSignUpClose()\n            props.handleLoginShow()\n        } else {\n            alert('Feilds are empty or Passwords do not match')\n        }\n        \n    }\n\n    return (\n        <div>\n            <Modal show={props.signUpShow} onHide={props.handleSignUpClose} >\n                <Modal.Header closeButton>\n                <Modal.Title>Create an Account!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={onSubmit} id=\"form\">\n                    <Form.Group>\n                        <Form.Label>Create a Username</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={handleUsernameChange} value={username} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Create a Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={handlePasswordChange} value={password} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleConfirmedPasswordChange} value={confirmedPassword} />\n                    </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" type='submit' form='form' >\n                        Sign Up!\n                    </Button>\n                    <Button variant=\"secondary\" onClick={props.handleSignUpClose}>\n                        Play as guest\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, 'clear']),\n  );\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // 1. Check that we're on an actual Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // 2. Check that our move is inside the game areas height (y)\n          // We shouldn't go through the bottom of the play area\n          !stage[y + player.pos.y + moveY] ||\n          // 3. Check that our move is inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // 4. Check that the cell wer'e moving to isn't set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};","import styled from 'styled-components';\n\nimport bgImage from '../../img/background.jpg';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;","export const TETROMINOS = {\n    0: { shape: [[0]], color: '0, 0, 0' },\n    I: {\n      shape: [[0, 'I', 0, 0], \n              [0, 'I', 0, 0], \n              [0, 'I', 0, 0], \n              [0, 'I', 0, 0]],\n      color: '80, 227, 230',\n    },\n    J: {\n      shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]],\n      color: '36, 95, 223',\n    },\n    L: {\n      shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n      color: '223, 173, 36',\n    },\n    O: {\n      shape: [['O', 'O'], ['O', 'O']],\n      color: '223, 217, 36',\n    },\n    S: {\n      shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]],\n      color: '48, 211, 56',\n    },\n    T: {\n      shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n      color: '132, 61, 198',\n    },\n    Z: {\n      shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]],\n      color: '227, 78, 78',\n    },\n  };\n  \n  export const randomTetromino = () => {\n    const tetrominos = 'IJLOSTZ';\n    const randTetromino =\n      tetrominos[Math.floor(Math.random() * tetrominos.length)];\n    return TETROMINOS[randTetromino];\n  };","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n\n    setRowsCleared(0);\n\n    const sweepRows = newStage => \n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, [])\n\n    const updateStage = prevStage => {\n      // First flush the stage\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\n      );\n\n      // Then draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n      // Then check if we collided\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage)\n      }\n\n      return newStage;\n    };\n\n    setStage(prev => updateStage(prev));\n  }, [player, resetPlayer]);\n\n  return [stage, setStage, rowsCleared];\n};\n","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n`;","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`\n","import React from 'react';\nimport { StyledCell } from './Styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({ type }) => (\n    \n    <StyledCell type={type} color={TETROMINOS[type].color}></StyledCell>\n)\n\nexport default React.memo(Cell);\n","import React from 'react';\nimport { StyledStage } from './Styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n    <StyledStage width={stage[0].length} height={stage.length}>\n        {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n    </StyledStage>\n);\n\nexport default Stage;\n","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center; \n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;","import React from 'react';\nimport { StyledDisplay } from './Styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n    box-sizing: border-box;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    border: none;\n    color: white;\n    background: #333;\n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    font-size: 1rem;\n    outline: none;\n    cursor: pointer;\n`","import React from 'react';\nimport { StyledStartButton } from './Styles/StyledStartButton';\n\nconst StartButton = ({ callback }) => (\n    <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n)\n\nexport default StartButton;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function NavBar(props) {\n\n    return (\n        <div>\n            <ul>\n                <Link to=\"/leaderBoard\"><li>Leader Board</li></Link>\n                <Link to='/deploy_react_tetris/'><li>Tetris</li></Link>\n                <li id='user'>{props.username}</li>\n            </ul>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Score(props) {\n\n    return (\n        <tr>\n            <td>{props.place}</td>\n            <td>{props.username}</td>\n            <td>{props.score}</td>\n            <td>{props.rows}</td>\n            <td>{props.level}</td>\n        </tr>\n    )\n}\n","import React from 'react'\nimport {Table} from 'react-bootstrap'\nimport Score from './Score'\n\nexport default function leaderBoard(props) {\n    \n    const renderScores = () => {\n        let count = 0\n        return props.scores.map(score => {\n            \n            return <Score place={count += 1} key={score.id} id={score.id} username={score.user.username} score={score.points} level={score.level} rows={score.rows} />\n        })\n    }\n\n    return (\n        <Table striped bordered hover variant=\"dark\">\n            <thead>\n                <tr>\n                    <th>Rank</th>\n                    <th>Username</th>\n                    <th>Score</th>\n                    <th>Rows</th>\n                    <th>Level</th>\n                </tr>\n            </thead>\n            <tbody>\n                {renderScores()}\n            </tbody>\n        </Table>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom'\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './Styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval'\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport NavBar from './NavBar'\n// import LogIn from './LogIn'\nimport LeaderBoard from './LeaderBoard'\nimport SignUp from './SignUp'\n\nconst Tetris = (props) => {\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n    const [scores, setScores] = useState([])\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n        rowsCleared\n    );\n\n    useEffect(() => {\n        fetch('https://blooming-brushlands-29268.herokuapp.com/api/v1/scores')\n        .then(response => response.json())\n        .then(scores => setScores(scores))\n    }, [gameOver])\n\n    const movePlayer = dir => {\n        if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n            updatePlayerPos({ x: dir, y: 0 });\n        }\n    }\n\n    const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0)\n    setLevel(0)\n    }\n\n    const drop = () => {\n\n        if (rows > (level + 1) * 10) {\n            setLevel(prev => prev + 1);\n            setDropTime(1000 / (level + 1) + 200)\n        }\n        if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n            updatePlayerPos({ x: 0, y: 1, collided: false })\n        } else {\n        // Game Over\n            if (player.pos.y < 1) {\n            setGameOver(true);\n            setDropTime(null);\n            // fetchLevel(level)\n            fetchScore(score)\n            }\n            updatePlayerPos({ x: 0, y: 0, collided: true });\n        }\n    }\n\n    const keyUp = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 40) {\n                setDropTime(1000 / (level + 1) + 200);\n            }\n        }\n    }\n\n    const dropPlayer = () => {\n    setDropTime(null)\n    drop();\n    }\n\n    const move = ({ keyCode }) => {\n    if (!gameOver) {\n        if (keyCode === 37) {\n            movePlayer(-1);\n        } else if (keyCode === 39) {\n            movePlayer(1);\n        } else if (keyCode === 40) {\n            dropPlayer();\n        } else if (keyCode === 38) {\n            playerRotate(stage, 1);\n        }\n    }\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime)\n\n    const fetchScore = () => {\n        fetch(\"https://blooming-brushlands-29268.herokuapp.com/api/v1/scores\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user_id: props.userId,\n                points: score,\n                rows: rows,\n                level: level\n            })\n        })\n    }\n\n    return (\n        \n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp}>\n        <NavBar username={props.username}/>\n        <Route exact path=\"/leaderBoard\" render={() => <LeaderBoard scores={scores}/>}/>\n        <Route path=\"/sign-up\" render={() => <SignUp/ >} />\n        <Route exact path=\"/deploy_react_tetris/\" render={() => \n            <StyledTetris>\n            <Stage stage={stage} />\n            <aside>\n                {gameOver ? (\n                <Display gameOver={gameOver} text=\"Game Over\" />\n                ) : (\n                <div>\n                    <Display text={`Score: ${score}`} />\n                    <Display text={`Rows: ${rows}`} />\n                    <Display text={`Level: ${level}`} />\n                </div>\n                )}\n                <StartButton callback={startGame} />\n            </aside>\n            </StyledTetris>\n        }/>\n    </StyledTetrisWrapper>\n    );\n};\n\nexport default Tetris;\n","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  const rotate = (matrix, dir) => {\n    // make rows into cols \n\n    const rotatedTetro = matrix.map((_, index) => \n      matrix.map (col => col[index]),\n      );\n    // reverse each row to get a rotated matix\n    if (dir > 0) return rotatedTetro.map(row => row.reverse());\n    return rotatedTetro.reverse()\n  };\n\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset >  0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n\n    setPlayer(clonedPlayer);\n  }\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\n      collided,\n    }))\n  }\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    })\n  }, [])\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n}","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n    const [score, setScore] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [level, setLevel] = useState(0);\n\n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n\n        if (rowsCleared > 0) {\n            // this is how original Tetris score is calculated\n            console.log('row cleared')\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n            setRows(prev => prev + rowsCleared);\n        }\n    }, [level, linePoints, rowsCleared])\n\n    useEffect(() => {\n    calcScore();\n    }, [calcScore, rowsCleared, score])\n\n    \n\n    return [score, setScore, rows, setRows, level, setLevel];\n}\n\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react'\nimport Tetris from './Tetris'\n\n// import LeaderBoard from './LeaderBoard'\n// import { Route } from 'react-router-dom'\n\nexport default function MainBody(props) {\n    return (\n        <Tetris userId={props.userId} scores={props.scores} username={props.username} />\n    )\n}\n","import React, { useEffect, useState } from 'react'\n// import {Button, Modal, Form} from 'react-bootstrap'\n\nimport './App.css';\n// import Tetris from './components/Tetris';\nimport LogIn from './components/LogIn';\nimport SignUp from './components/SignUp';\n// import NavBar from './components/NavBar';\nimport MainBody from './components/MainBody';\n// import LeaderBoard from './components/LeaderBoard'\n\n\n\nconst App = () =>  {\n\n  const [users, setUsers] = useState([])\n  const [userId, setUserId] = useState('')\n  const [loginShow, setLoginShow] = useState(true);\n  const [signUpShow, setSignUpShow] = useState(false)\n  const [username, setUsername] = useState('guest')\n\n  const handleLoginShow = () => setLoginShow(true);\n  const handleLoginClose = () => setLoginShow(false);\n  const handleSignUpClose = () => setSignUpShow(false)\n\n  const logginUser = id => {\n    setUserId(id)\n  }\n\n  const handleCreateAccountClick = () => {\n    handleLoginClose()\n    setSignUpShow(true)\n  }\n\n  useEffect(() => {\n    if (users.length > 0) {\n      let user = users.find(user => user.id === userId)\n      let username = user.username\n      setUsername(username)      \n    }\n  }, [userId])\n\n  useEffect(() => {\n    fetch('https://blooming-brushlands-29268.herokuapp.com/api/v1/users')\n    .then(response => response.json())\n    .then(users => setUsers(users))\n  }, [loginShow])\n\n  return (\n    <div className=\"App\">\n      \n      <LogIn handleCreateAccountClick={handleCreateAccountClick} logginUser={logginUser} users={users} handleLoginClose={handleLoginClose} loginShow={loginShow}/>\n      <SignUp handleLoginShow={handleLoginShow} signUpShow={signUpShow} handleSignUpClose={handleSignUpClose} />\n      <MainBody username={username} userId={userId}/>\n      {/* <Tetris userId={userId} /> */}\n      {/* <LeaderBoard scores={scores}/> */}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\n"],"sourceRoot":""}